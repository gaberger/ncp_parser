# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2
jobs:
  dependencies:
    working_directory: ~/dependencies
    docker:
      - image: circleci/clojure:tools-deps-1.9.0.375
    steps:
      - run:
          name: Download GRAALVM
          command: |
            echo Download GRAALVM
            curl -LO https://github.com/oracle/graal/releases/download/vm-1.0.0-rc2/graalvm-ce-1.0.0-rc2-linux-amd64.tar.gz
      - run:
          name: Prepare GRAALVM
          command: |
            echo Prepare GRAALVM
            tar xvf graalvm-ce-1.0.0-rc2-linux-amd64.tar.gz
      - save_cache:
          paths:
            - ~/dependencies/graalvm-ce-1.0.0-rc2
          key: v1-dependencies-graalvm-{{ checksum "graalvm-ce-1.0.0-rc2-linux-amd64.tar.gz" }}
  prepare_and_test:
    docker:
      - image: circleci/clojure:tools-deps-1.9.0.375
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
      - run:
          name: Grab deps
          command: clojure -Spath
      - run:
          name: Test V2
          command: clojure -A:testv2
  build_release:
    docker:
      - image: circleci/clojure:tools-deps-1.9.0.375
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            - v1-dependencies-graalvm-{{ checksum "graalvm-ce-1.0.0-rc2-linux-amd64.tar.gz" }}
      - run:
          name: Check dependencies
          command: ls -R ~
      - run:
          name: Build Native Image
          command: |
             clojure -A:native-image --graalvm-home ~/dependencies/graalvm-ce-1.0.0-rc2

workflows:
  version: 2
  build_and_test:
    jobs:
      - dependencies
      - prepare_and_test:
          requires:
            - dependencies
      - build_release:
          requires:
            - prepare_and_test
            - dependencies
