(*This is the EBNF Grammar for FRR router*)

device = frr service? hostname? interfaces router-id  router

frr = (<'frr'> frroptions)*
frroptions = version | frrdefaults
<version> = <'version'> frr-version
<frr-version> = #"\d+\.\d+\.\d+"
<frrdefaults> = 'defaults traditional' | 'defaults datacenter'

service = ('service' serviceoptions)*
serviceoptions = ivc
ivc = 'integrated-vtysh-config'

hostname = <'hostname'> word

(* interface section *)
interfaces = interface*
interface = <'interface'> name | description | ip_address?
description = <'description'> (doublequote word+ doublequote)
interface-name = <'interface'> word
name = word
ip_address = <'ip address'> prefix


(* router *)
<router> = router_bgp

(* router bgp *)
router_bgp = routerbgp (bgpflags | bgplist | neighbors)
<routerbgp> = <'router bgp'> asn
asn = number

<bgpflags> =  synchronization
synchronization = bool? <'synchronization'>

bgplist = (<'bgp'> bgp)*
bgp = medoptions | bestpath | confederation

router-id = <'router-id'> address
<medoptions> = always-compare-med | deterministic-med
always-compare-med = 'always-compare-med'
deterministic-med =  'deterministic-med'

bestpath = (<'bestpath'> bestpathoptions)*
<bestpathoptions> = compare-routerid | as-path_confed
compare-routerid = 'compare-routerid'
as-path_confed = 'as-path confed'

confederation = (<'confederation'> confederationoptions)*
<confederationoptions> = identifier | peers
peers = <'peers'> number+
identifier = <'identifier'> number



(* neighbors *)

neighbors = (<'neighbor'> neighbor)*
neighbor = naddr | neighborpeers
neighborpeers = word 'peer-group'
naddr = (address neighboroptions)*
<neighboroptions> = neighborattrs | neighborvalues
<neighborvalues> = next-hop-self
next-hop-self = 'next-hop-self'
<neighborattrs> = remote-as | peer-group | update-source | send-community | advertisement-interval | route-map
remote-as = <'remote-as'> number
peer-group = <'peer-group'> word
send-community = <'send-community'> word
update-source = <'update-source'> address
advertisement-interval = <'advertisement-interval'> number

route-map = (<'route-map'> map)
map = (routemap direction)*
<routemap> = word


address-family_ipv4_unicast = <'address-family ipv4 unicast'> 


(* Primitives *)
<direction> = in | out
<in> = 'in'
<out> = 'out'
<bool> = 'no'
no = <'no'>
le = <'le'> number
gt = <'gt'> number
<community-type> = number #":" number
<permit> = 'permit'
<deny> = 'deny'
<ipv4address> = address
<address> = #"\d+\.\d+\.\d+\.\d+"
<prefix> = cidr
<cidr> = (address '/' number)
<number> = #"[0-9]+"
<token> = word | number
<word> = #'[a-zA-Z0-9()\\.,-^?_|]+'
<number> = #'[0-9]+'
<doublequote> = #"\""
